# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yyWN05Zqrcwja27n_ZnjWpqMf0FttCly
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#Loading thr dataset and reading the first 5 rows
netflix=pd.read_csv('/content/sample_data/netflix_content_2023.csv')
netflix.head()

#Clean the 'Hours Viewed' column
netflix['Hours Viewed'] =netflix['Hours Viewed'].replace(',', '', regex=True).astype(int)
netflix[['Title', 'Hours Viewed']].head()

#Analyzing the viewership by Content Type
content_type_viewership = netflix.groupby('Content Type')['Hours Viewed'].sum()
plt.bar(content_type_viewership.index, content_type_viewership.values, color = "green")
plt.title("Viewership by Content Type")
plt.xlabel("Content Type")
plt.ylabel("Hours Viewed ( X 10^11 Hours)")
plt.show()
#Shows are watched approximatey 2 times more than Movies

#Analyzing the viewership by Language Indicator
language_viewership = netflix.groupby('Language Indicator')['Hours Viewed'].sum()
plt.bar(language_viewership.index, language_viewership.values)
plt.title("Viewership by Language")
plt.xlabel("Language Indicator")
plt.ylabel("Hours Viewed ( X 10^10 Hours)")
plt.show()
#Content in English Language significantly dominates the viewership, followed by Korean Language

#Analyzing Viewship by Language indicator in proportion to each other
plt.pie(language_viewership.values, labels=language_viewership.index, colors = ['blue', 'red', 'green', 'yellow', 'purple', 'cyan'], autopct='%1.1f%%')
plt.show()
#Conclusion = 78.6% of total viewership comes from English language content

#Analyzing viewership based on release date to identify trends over time
labels= ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
netflix['Release Date']=pd.to_datetime(netflix['Release Date'])
netflix['Release Month']=netflix['Release Date'].dt.month
monthly_viewership = netflix.groupby('Release Month')['Hours Viewed'].sum()
plt.plot(monthly_viewership.index, monthly_viewership.values, marker ='o')
plt.xticks(monthly_viewership.index, labels)
plt.show()
#Conclusion = The viewership is highest is summer and winter holidays i.e., in June and Decemer

#Most viewed 5 content on netflix
top_5 = netflix.nlargest(5, 'Hours Viewed')
top_5[['Title', 'Release Date', 'Hours Viewed', 'Language Indicator', 'Content Type']]

#Analyzing viewership based on Content Type and release Month to identify trends over time
labels= ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
netflix_show=netflix[netflix['Content Type']=='Show']
monthly_viewership_show = netflix_show.groupby('Release Month')['Hours Viewed'].sum()
netflix_movie=netflix[netflix['Content Type']=='Movie']
monthly_viewership_movie = netflix_movie.groupby('Release Month')['Hours Viewed'].sum()

plt.plot(monthly_viewership_show.index, monthly_viewership_show.values, color ='blue', marker = 'o', label = 'Show')
plt.plot(monthly_viewership_show.index, monthly_viewership_movie.values, color ='orange', marker = 'o', label = 'Movie')
plt.xticks(monthly_viewership.index, labels)
plt.legend()
plt.show()

#Analyzing Viewership based on seasons as per release date
def get_season(month):
  if month in [12,1,2]:
    return 'Winter'
  elif month in [3,4,5]:
    return 'Spring'
  elif month in [6,7,8]:
    return 'Summer'
  else:
    return 'Fall'

netflix['Release Season']=netflix['Release Month'].apply(get_season)
viewership_by_season=netflix.groupby('Release Season')['Hours Viewed'].sum()
viewership_by_season=viewership_by_season.sort_values()
plt.bar(viewership_by_season.index, viewership_by_season.values, color='purple')
plt.title("Total Viewership Hours by Release Season")
plt.xlabel("Seasons")
plt.ylabel("Total Viewership (X 10^10 Hours)")
plt.show()

#Analyzing releases and viewsership by day of the week
labels=['Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun']
netflix['Release Day']=netflix['Release Date'].dt.day_name()
releases_by_day = netflix['Release Day'].value_counts().reindex(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])
viewership_by_day = netflix.groupby('Release Day')['Hours Viewed'].sum().reindex(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])

plt.subplot(1,2,1)
plt.bar(releases_by_day.index, releases_by_day.values, color="brown")
plt.xticks(releases_by_day.index, labels, rotation=45)
plt.title("Movies released on each day of the week")
plt.xlabel("No. of Movies released")
plt.ylabel("Day of the Week")

plt.subplot(1,2,2)
plt.bar(viewership_by_day.index, viewership_by_day.values, color="aqua")
plt.xticks(viewership_by_day.index, labels,rotation=45)
plt.title("Viewership on each day of the week")
plt.xlabel("Total Viewership")
plt.ylabel("Day of the Week")

plt.tight_layout(pad=0.0)
plt.show()
#Conclusion= the viewership is maximum on Friday. Hence, netflix releases content on friday only to maximize the consumption of content

#Analyzing the mean viewership of the content based on availibility
netflix.groupby('Available Globally?')['Hours Viewed'].mean()